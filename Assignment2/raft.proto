syntax = "proto3";

// Define messages exchanged between client and server nodes
message KeyValue {
  string key = 1;
  string value = 2;
}

message LogEntry {
  int32 term = 1;
  string key = 2;
  string value = 3;
}

// Define RPC service for server nodes
service RaftCluster {
  rpc AppendEntry(AppendEntryRequest) returns (AppendEntryReply) {}
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteReply) {}
  rpc ServeClient (ServeClientArgs) returns (ServeClientReply) {}
}

// Request message for AppendEntry RPC
message AppendEntryRequest {
  int32 term = 1;
  string leaderId = 2;
  int32 prevLogIndex = 3;
  int32 prevLogTerm = 4;
  repeated LogEntry entries = 5;
  int32 leaderCommit = 6;
  // Added the leader lease interval duration here
  float leaseInterval = 7;
}

// Reply message for AppendEntry RPC
message AppendEntryReply {
  int32 term = 1;
  bool success = 2;
}

// Request message for RequestVote RPC
message RequestVoteRequest {
  int32 term = 1;
  string candidateId = 2;
  int32 lastLogIndex = 3;
  int32 lastLogTerm = 4;
}

// Reply message for RequestVote RPC
message RequestVoteReply {
  int32 term = 1;
  bool success = 2;
  float oldLeaderLease = 3;
}

message ServeClientArgs {
  string Request = 1;
}

message ServeClientReply {
  string Data = 1;
  string LeaderID = 2;
  bool Success = 3;
}

// python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. raft.proto --pyi_out=. 